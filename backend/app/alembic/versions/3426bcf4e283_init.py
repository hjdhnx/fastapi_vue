"""init

Revision ID: 3426bcf4e283
Revises: 41c688d1ca3c
Create Date: 2023-12-04 19:42:09.474798

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '3426bcf4e283'
down_revision: Union[str, None] = '41c688d1ca3c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('t_dict_details', sa.Column('dict_disabled', sa.Boolean(), server_default='0', nullable=False, comment='是否禁用'))
    op.create_foreign_key(None, 't_dict_details', 't_dict_data', ['dict_data_id'], ['id'], ondelete='CASCADE')
    op.add_column('t_hiker_developer', sa.Column('test', sa.String(length=10), server_default='null', nullable=True, comment='测试字段'))
    op.alter_column('t_hiker_developer', 'name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=256),
               nullable=False,
               existing_comment='开发者账号',
               existing_server_default=sa.text("''"))
    op.alter_column('t_hiker_developer', 'qq',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=11),
               nullable=False,
               existing_comment='QQ号',
               existing_server_default=sa.text("''"))
    op.alter_column('t_hiker_developer', 'password',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=256),
               nullable=False,
               existing_comment='开发者密码',
               existing_server_default=sa.text("''"))
    op.create_foreign_key(None, 't_hiker_rule', 't_hiker_rule_type', ['type_id'], ['id'], ondelete='cascade')
    op.create_foreign_key(None, 't_hiker_rule', 't_hiker_developer', ['dev_id'], ['id'], ondelete='set null')
    op.create_foreign_key(None, 't_perm_label_role', 't_perm_label', ['label_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 't_perm_label_role', 't_roles', ['role_id'], ['id'])
    op.create_foreign_key(None, 't_role_menu', 't_roles', ['role_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 't_role_menu', 't_menus', ['menu_id'], ['id'])
    op.create_foreign_key(None, 't_user_role', 't_roles', ['role_id'], ['id'])
    op.create_foreign_key(None, 't_user_role', 't_users', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 't_user_role', type_='foreignkey')
    op.drop_constraint(None, 't_user_role', type_='foreignkey')
    op.drop_constraint(None, 't_role_menu', type_='foreignkey')
    op.drop_constraint(None, 't_role_menu', type_='foreignkey')
    op.drop_constraint(None, 't_perm_label_role', type_='foreignkey')
    op.drop_constraint(None, 't_perm_label_role', type_='foreignkey')
    op.drop_constraint(None, 't_hiker_rule', type_='foreignkey')
    op.drop_constraint(None, 't_hiker_rule', type_='foreignkey')
    op.alter_column('t_hiker_developer', 'password',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=256),
               nullable=True,
               existing_comment='开发者密码',
               existing_server_default=sa.text("''"))
    op.alter_column('t_hiker_developer', 'qq',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=11),
               nullable=True,
               existing_comment='QQ号',
               existing_server_default=sa.text("''"))
    op.alter_column('t_hiker_developer', 'name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=256),
               nullable=True,
               existing_comment='开发者账号',
               existing_server_default=sa.text("''"))
    op.drop_column('t_hiker_developer', 'test')
    op.drop_constraint(None, 't_dict_details', type_='foreignkey')
    op.drop_column('t_dict_details', 'dict_disabled')
    # ### end Alembic commands ###
